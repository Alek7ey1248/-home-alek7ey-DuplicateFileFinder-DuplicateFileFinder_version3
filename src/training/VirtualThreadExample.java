package training;

/*  Пример использования виртуального потока.
 * !!! В виртуальном потоке следует запускать только блокирующий код такой как input/output операции.
 * !!! Тут он мне не понадобился, но вот пример:

 * Виртуальный поток - это поток, который не имеет соответствующего потока ОС.
 * Виртуальные потоки обеспечивают более эффективное использование ресурсов и улучшают производительность.
 *
 * Виртуальные потоки (или Project Loom) — это новая концепция в Java,
 *  которая позволяет создавать легковесные потоки.
 * Они обеспечивают более простую и эффективную работу с многопоточностью,
 * позволяя писать асинхронный код, который выглядит как синхронный.
 *
 * Версия java должна быть 19 или выше.
 *
 * 1.Создание виртуального потока: Используется метод Thread.ofVirtual().start(...) для создания и запуска виртуального потока.
 * 2.Имитация работы: Виртуальный поток выполняет цикл, выводя сообщения и задерживаясь на 100 миллисекунд.
 * 3.Основной поток: В то же время основной поток выполняет аналогичную задачу, задерживаясь на 150 миллисекунд.
 * 4.Ожидание завершения: После завершения основного потока программа ждет завершения виртуального потока с помощью метода join().
* */
public class VirtualThreadExample {
    public static void main(String[] args) throws InterruptedException {
        // Создаем виртуальный поток
        Thread virtualThread = Thread.ofVirtual().start(() -> {
            try {
                // Имитация работы в потоке
                for (int i = 0; i < 5; i++) {
                    System.out.println("Виртуальный поток выполняется: " + i);
                    Thread.sleep(100); // Задержка в 100 миллисекунд
                }
            } catch (InterruptedException e) {
                System.out.println("Виртуальный поток прерван.");
            }
        });

        // Основной поток продолжает выполнение
        for (int i = 0; i < 5; i++) {
            System.out.println("Основной поток выполняется: " + i);
            try {
                Thread.sleep(150); // Задержка в 150 миллисекунд
            } catch (InterruptedException e) {
                System.out.println("Основной поток прерван.");
            }
        }

        // Ждем завершения виртуального потока
        virtualThread.join();
        System.out.println("Виртуальный поток завершен.");
    }
}
